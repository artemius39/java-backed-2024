app:
  telegram-token: ${TELEGRAM_TOKEN}
  dead-letter-queue-topic:
    name: updates_dlq
    replicas: 1
    partitions: 1
  updates-topic:
    name: updates
    replicas: 1
    partitions: 1

management:
  endpoint:
    health:
      enabled: true
    info:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
  server:
    port: 8001
  endpoints:
    web:
      base-path: ""
      exposure:
        include:
          - info
          - health
          - prometheus
      path-mapping:
        prometheus: /metrics

client:
  bot:
    base-url: http://localhost:8080

spring:
  application:
    name: bot
  jackson:
    time-zone: UTC
  kafka:
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      bootstrap-servers: localhost:9092
      group-id: main
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      bootstrap-servers: localhost:9092

server:
  port: 8090

logging:
  config: classpath:log4j2-plain.xml
